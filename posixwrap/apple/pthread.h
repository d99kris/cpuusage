int   pthread_atfork(void (*a)(void), void (*b)(void), void(*c)(void));
int   pthread_attr_destroy(pthread_attr_t *a);
int   pthread_attr_getdetachstate(const pthread_attr_t *a, int *b);
int   pthread_attr_getguardsize(const pthread_attr_t *restrict a, size_t *restrict b);
int   pthread_attr_getinheritsched(const pthread_attr_t *restrict a, int *restrict b);
int   pthread_attr_getschedparam(const pthread_attr_t *restrict a, struct sched_param *restrict b);
int   pthread_attr_getschedpolicy(const pthread_attr_t *restrict a, int *restrict b);
int   pthread_attr_getscope(const pthread_attr_t *restrict a, int *restrict b);
int   pthread_attr_getstack(const pthread_attr_t *restrict a, void **restrict b, size_t *restrict c);
int   pthread_attr_getstacksize(const pthread_attr_t *restrict a, size_t *restrict b);
int   pthread_attr_init(pthread_attr_t *a);
int   pthread_attr_setdetachstate(pthread_attr_t *a, int b);
int   pthread_attr_setguardsize(pthread_attr_t *a, size_t b);
int   pthread_attr_setinheritsched(pthread_attr_t *a, int b);
int   pthread_attr_setschedparam(pthread_attr_t *restrict a, const struct sched_param *restrict b);
int   pthread_attr_setschedpolicy(pthread_attr_t *a, int b);
int   pthread_attr_setscope(pthread_attr_t *a, int b);
int   pthread_attr_setstack(pthread_attr_t *a, void *b, size_t c);
int   pthread_attr_setstacksize(pthread_attr_t *a, size_t b);
int   pthread_cancel(pthread_t a);
int   pthread_cond_broadcast(pthread_cond_t *a);
int   pthread_cond_destroy(pthread_cond_t *a);
int   pthread_cond_init(pthread_cond_t *restrict a, const pthread_condattr_t *restrict b);
int   pthread_cond_signal(pthread_cond_t *a);
int   pthread_cond_timedwait(pthread_cond_t *restrict a, pthread_mutex_t *restrict b, const struct timespec *restrict c);
int   pthread_cond_wait(pthread_cond_t *restrict a, pthread_mutex_t *restrict b);
int   pthread_condattr_destroy(pthread_condattr_t *a);
int   pthread_condattr_getpshared(const pthread_condattr_t *restrict a, int *restrict b);
int   pthread_condattr_init(pthread_condattr_t *a);
int   pthread_condattr_setpshared(pthread_condattr_t *a, int b);
//unsupported (incompatible pointer): int   pthread_create(pthread_t *restrict a, const pthread_attr_t *restrict b, void *(*c)(void*), void *restrict d);
int   pthread_detach(pthread_t a);
int   pthread_equal(pthread_t a, pthread_t b);
//unsupported (never returns): void  pthread_exit(void *a);
int   pthread_getconcurrency(void);
int   pthread_getschedparam(pthread_t a, int *restrict b, struct sched_param *restrict c);
void *pthread_getspecific(pthread_key_t a);
int   pthread_join(pthread_t a, void **b);
int   pthread_key_create(pthread_key_t *a, void (*b)(void*));
int   pthread_key_delete(pthread_key_t a);
int   pthread_mutex_destroy(pthread_mutex_t * a);
int   pthread_mutex_getprioceiling(const pthread_mutex_t *restrict a, int *restrict b);
int   pthread_mutex_init(pthread_mutex_t *restrict a, const pthread_mutexattr_t *restrict b);
int   pthread_mutex_lock(pthread_mutex_t * a);
int   pthread_mutex_setprioceiling(pthread_mutex_t *restrict a, int b, int *restrict c);
int   pthread_mutex_trylock(pthread_mutex_t * a);
int   pthread_mutex_unlock(pthread_mutex_t * a);
int   pthread_mutexattr_destroy(pthread_mutexattr_t * a);
int   pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *restrict a, int *restrict b);
int   pthread_mutexattr_getprotocol(const pthread_mutexattr_t *restrict a, int *restrict b);
int   pthread_mutexattr_getpshared(const pthread_mutexattr_t *restrict a, int *restrict b);
int   pthread_mutexattr_gettype(const pthread_mutexattr_t *restrict a, int *restrict b);
int   pthread_mutexattr_init(pthread_mutexattr_t * a);
int   pthread_mutexattr_setprioceiling(pthread_mutexattr_t *a, int b);
int   pthread_mutexattr_setprotocol(pthread_mutexattr_t *a, int b);
int   pthread_mutexattr_setpshared(pthread_mutexattr_t *a, int b);
int   pthread_mutexattr_settype(pthread_mutexattr_t *a, int b);
int   pthread_once(pthread_once_t *a, void (*b)(void));
int   pthread_rwlock_destroy(pthread_rwlock_t * a);
int   pthread_rwlock_init(pthread_rwlock_t *restrict a, const pthread_rwlockattr_t *restrict b);
int   pthread_rwlock_rdlock(pthread_rwlock_t * a);
int   pthread_rwlock_tryrdlock(pthread_rwlock_t * a);
int   pthread_rwlock_trywrlock(pthread_rwlock_t * a);
int   pthread_rwlock_unlock(pthread_rwlock_t * a);
int   pthread_rwlock_wrlock(pthread_rwlock_t * a);
int   pthread_rwlockattr_destroy(pthread_rwlockattr_t * a);
int   pthread_rwlockattr_getpshared(const pthread_rwlockattr_t *restrict a, int *restrict b);
int   pthread_rwlockattr_init(pthread_rwlockattr_t * a);
int   pthread_rwlockattr_setpshared(pthread_rwlockattr_t *a, int b);
//unsupported (internally used by cpuusage): pthread_t pthread_self(void);
int   pthread_setcancelstate(int a, int * b);
int   pthread_setcanceltype(int a, int * b);
int   pthread_setconcurrency(int a);
int   pthread_setschedparam(pthread_t a, int b, const struct sched_param * c);
int   pthread_setspecific(pthread_key_t a, const void * b);
void  pthread_testcancel(void);
