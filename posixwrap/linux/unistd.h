int          access(const char *a, int b);
unsigned     alarm(unsigned a);
int          chdir(const char *a);
int          chown(const char *a, uid_t b, gid_t c);
int          close(int a);
size_t       confstr(int a, char *b, size_t c);
char        *crypt(const char *a, const char *b);
int          dup(int a);
int          dup2(int a, int b);
//unsupported (never returns): void         _exit(int a);
void         encrypt(char a[64], int b);
//unsupported (variable args): int          execl(const char *a, const char *b, ...);
//unsupported (variable args): int          execle(const char *a, const char *b, ...);
//unsupported (variable args): int          execlp(const char *a, const char *b, ...);
int          execv(const char *a, char *const b[]);
int          execve(const char *a, char *const b[], char *const c[]);
int          execvp(const char *a, char *const b[]);
int          faccessat(int a, const char *b, int c, int d);
int          fchdir(int a);
int          fchown(int a, uid_t b, gid_t c);
int          fchownat(int a, const char *b, uid_t c, gid_t d, int e);
int          fdatasync(int a);
int          fexecve(int a, char *const b[], char *const c[]);
pid_t        fork(void);
long         fpathconf(int a, int b);
int          fsync(int a);
int          ftruncate(int a, off_t b);
char        *getcwd(char *a, size_t b);
gid_t        getegid(void);
uid_t        geteuid(void);
gid_t        getgid(void);
int          getgroups(int a, gid_t b[]);
long         gethostid(void);
int          gethostname(char *a, size_t b);
char        *getlogin(void);
int          getlogin_r(char *a, size_t b);
int          getopt(int a, char * const b[], const char *c);
pid_t        getpgid(pid_t a);
pid_t        getpgrp(void);
pid_t        getpid(void);
pid_t        getppid(void);
pid_t        getsid(pid_t a);
uid_t        getuid(void);
int          isatty(int a);
int          lchown(const char *a, uid_t b, gid_t c);
int          link(const char *a, const char *b);
int          linkat(int a, const char *b, int c, const char *d, int e);
int          lockf(int a, int b, off_t c);
off_t        lseek(int a, off_t b, int c);
int          nice(int a);
long         pathconf(const char *a, int b);
int          pause(void);
int          pipe(int a[2]);
ssize_t      pread(int a, void *b, size_t c, off_t d);
ssize_t      pwrite(int a, const void *b, size_t c, off_t d);
ssize_t      read(int a, void *b, size_t c);
ssize_t      readlink(const char *restrict a, char *restrict b, size_t c);
ssize_t      readlinkat(int a, const char *restrict b, char *restrict c, size_t d);
int          rmdir(const char *a);
int          setegid(gid_t a);
int          seteuid(uid_t a);
int          setgid(gid_t a);
int          setpgid(pid_t a, pid_t b);
pid_t        setpgrp(void);
int          setregid(gid_t a, gid_t b);
int          setreuid(uid_t a, uid_t b);
int          setuid(uid_t a);
unsigned     sleep(unsigned a);
void         swab(const void *restrict a, void *restrict b, ssize_t c);
int          symlink(const char *a, const char *b);
int          symlinkat(const char *a, int b, const char *c);
void         sync(void);
long         sysconf(int a);
pid_t        tcgetpgrp(int a);
int          tcsetpgrp(int a, pid_t b);
int          truncate(const char *a, off_t b);
char        *ttyname(int a);
int          ttyname_r(int a, char *b, size_t c);
int          unlink(const char *a);
int          unlinkat(int a, const char *b, int c);
ssize_t      write(int a, const void *b, size_t c);
