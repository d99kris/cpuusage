.\" DO NOT MODIFY THIS FILE!  It was generated by help2man.
.TH CPUUSAGE "1" "January 2025" "cpuusage v1.50" "User Commands"
.SH NAME
cpuusage \- instrumentation CPU profiler
.SH SYNOPSIS
.B cpuusage
\fI\,-a \/\fR[\fI\,OPTIONS\/\fR] \fI\,PROG \/\fR[\fI\,ARGS\/\fR..]
.br
.B cpuusage
\fI\,-c \/\fR[\fI\,OPTIONS\/\fR] \fI\,PROG \/\fR[\fI\,ARGS\/\fR..]
.br
.B cpuusage
\fI\,-f <FUNCTIONS> \/\fR[\fI\,OPTIONS\/\fR] \fI\,PROG \/\fR[\fI\,ARGS\/\fR..]
.br
.B cpuusage
\fI\,-i <INCLUDES> \/\fR[\fI\,OPTIONS\/\fR] \fI\,PROG \/\fR[\fI\,ARGS\/\fR..]
.br
.B cpuusage
\fI\,-p \/\fR[\fI\,OPTIONS\/\fR] \fI\,PROG \/\fR[\fI\,ARGS\/\fR..]
.br
.B cpuusage
\fI\,-r JSONFILE \/\fR[\fI\,OPTIONS\/\fR]
.br
.B cpuusage
\fI\,--help|-h\/\fR
.br
.B cpuusage
\fI\,--version|-v\/\fR
.SH DESCRIPTION
cpuusage is an instrumentation profiler enabling logging of the duration of
internal function calls (for programs compiled with \fB\-finstrument\-functions\fR flag)
or external standard POSIX function calls. It provides visualization in HTML
format using Chromium Catapult.
.SS "Modes:"
.TP
\fB\-a\fR
trace all standard POSIX function calls
.TP
\fB\-c\fR
trace internal function calls (requires PROG to
be compiled with \fB\-finstrument\-functions\fR)
.TP
\fB\-f\fR <FUNCTIONS>
trace specified POSIX functions
.TP
\fB\-i\fR <INCLUDES>
trace functions in specified POSIX headers
.TP
\fB\-p\fR
trace child process durations
.TP
\fB\-\-help\fR, \fB\-h\fR
display this help and exit
.TP
\fB\-\-version\fR, \fB\-v\fR
output version information and exit
.SH OPTIONS
.TP
\fB\-d\fR
debug mode, running program through debugger
.TP
\fB\-e\fR
separate processes for child process trace
.TP
\fB\-j\fR <PATH>
write iterim JSON trace log to specified path
.TP
\fB\-m\fR <MINTIME>
minimum sample time in usec (default 0)
.TP
\fB\-n\fR <SAMPLES>
only log up to specified number of samples
(default 1000000)
.TP
\fB\-o\fR <PATH>
write HTML report to specified path, rather
than default ./cutrace\-PID.html
.TP
\fB\-r\fR <JSONFILE>
read JSON file and convert to HTML report
.TP
\fB\-s\fR
start tracing with SIGUSR1 and stop with
SIGUSR2, instead of trace from process start
.TP
\fB\-u\fR
trace only main\-thread
.TP
\fB\-v\fR
verbose mode
.TP
\fB\-y\fR
auto\-open resulting html file
.TP
PROG
program to run and profile
.TP
[ARGS]
optional arguments to the program
.SH EXAMPLES
cpuusage \-o cutrace.html \-a ./build/ex001
.IP
trace all standard POSIX function calls and write
log to cutrace.html
.PP
cpuusage \-o cutrace.html \-c ./build/ex002
.IP
trace instrumented functions and write log to
cutrace.html
.PP
cpuusage \-o cutrace.html \-f fopen,fclose,fread,fwrite ./build/ex001
.IP
trace calls to fopen, fclose, fread and fwrite, and write
log to cutrace.html
.PP
cpuusage \-o cutrace.html \-i stdio.h ./build/ex001
.IP
trace calls to all POSIX functions in stdio.h and write
log to cutrace.html
.PP
cpuusage \-o cutrace.html \-p ./build/ex005.sh
.IP
trace process durations and write to cutrace.html
.SH AUTHOR
Written by Kristofer Berggren
.SH "REPORTING BUGS"
Report bugs at https://github.com/d99kris/cpuusage
.SH COPYRIGHT
Copyright \(co 2017\-2025 Kristofer Berggren
.PP
cpuusage is distributed under the BSD 3\-Clause license.
