#!/usr/bin/env bash

BUILD="0"
INSTALL="0"
TESTS="0"
case "${1%/}" in
  build)
    BUILD="1"
    ;;

  install)
    BUILD="1"
    INSTALL="1"
    ;;

  tests)
    BUILD="1"
    TESTS="1"
    ;;

  *)
    echo "usage: make.sh <build|install|tests>"
    echo "  build     - build"
    echo "  install   - perform build, tests and install"
    echo "  tests     - perform build and run tests"
    exit 1
    ;;
esac

if [[ "${BUILD}" == "1" ]]; then
  if [[ "$(which help2man)" != "" ]]; then
    cd src && help2man -n "instrumentation CPU profiler" -N -o cpuusage.1 ./cpuusage && cd - > /dev/null
    if [[ "${?}" == "0" ]]; then
      if [[ "$(uname)" == "Darwin" ]]; then
        SED="gsed -i"
      else
        SED="sed -i"
      fi
      ${SED} "s/\.\\\\\" DO NOT MODIFY THIS FILE\!  It was generated by help2man.*/\.\\\\\" DO NOT MODIFY THIS FILE\!  It was generated by help2man./g" src/cpuusage.1
    else
      echo "generate man-page failed, exiting."
      exit 1
    fi
  else
    echo "generate man-page skipped, help2man not present."
  fi
  
  mkdir -p build && cd build && cmake .. && make -s
  if [[ "${?}" != "0" ]]; then
    echo "build failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${TESTS}" == "1" ]]; then
  cd build && ctest --output-on-failure
  if [[ "${?}" != "0" ]]; then
    echo "tests failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

if [[ "${INSTALL}" == "1" ]]; then
  INSTALLCMD=""
  if [[ "$(uname)" == "Linux" ]]; then
    INSTALLCMD="sudo"
  fi
  
  cd build && ${INSTALLCMD} make -s install
  if [[ "${?}" != "0" ]]; then
    echo "install failed, exiting."
    exit 1
  fi
  cd - > /dev/null
fi

exit 0
